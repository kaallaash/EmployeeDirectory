// <auto-generated />
using System;
using ED.Services.Employees.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ED.Services.Employees.Migrations.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20220906004524_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ED.Services.Employees.Context.Entities.DepartmentRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTimeOffset(new DateTime(2022, 9, 6, 3, 45, 23, 791, DateTimeKind.Unspecified).AddTicks(6234), new TimeSpan(0, 3, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2022, 9, 6, 3, 45, 23, 793, DateTimeKind.Unspecified).AddTicks(7574), new TimeSpan(0, 3, 0, 0, 0)),
                            Name = "Разработка ПО"
                        });
                });

            modelBuilder.Entity("ED.Services.Employees.Context.Entities.EmployeeRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PhotoLink")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTimeOffset(new DateTime(2022, 9, 6, 3, 45, 23, 795, DateTimeKind.Unspecified).AddTicks(702), new TimeSpan(0, 3, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2022, 9, 6, 3, 45, 23, 795, DateTimeKind.Unspecified).AddTicks(1029), new TimeSpan(0, 3, 0, 0, 0)),
                            DepartmentId = 1,
                            FirstName = "Андрей",
                            LastName = "Калашников",
                            Patronymic = "Андреевич",
                            Phone = "+79670490712",
                            PhotoLink = "/EmployeePhoto/_dev0.jpg"
                        });
                });

            modelBuilder.Entity("ED.Services.Employees.Context.Entities.EmployeeRow", b =>
                {
                    b.HasOne("ED.Services.Employees.Context.Entities.DepartmentRow", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ED.Services.Employees.Context.Entities.DepartmentRow", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
